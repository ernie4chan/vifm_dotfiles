" ---------------------------------------------------------
" File: vifmrc
" Maintainer: Ernie Lin
"
" Update 01: 2022-06-08
" Update 02: 2024-06-30
" ---------------------------------------------------------

" {{{ Configuration.

" Colorschme: Picks the first one supported by the terminal.
colorscheme gruvbox

" Command used to edit files in various contexts for 'vi' clone such as:
" Vim (default), Elvis or Vile.
set vicmd=vim

" This makes vifm perform file operations on its own instead of relying on
" doesn't support progress measuring.
set syscalls

" Trash Directory.
set trash

" With this option turned on you can run partially entered commands with
" unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).
set fastrun

" This is how many directories to store in the directory history.
set history=10000

" Automatically resolve symbolic links on 'l' or 'Enter'.
set followlinks

" Use Vim's format of help file (has highlighting and "hyperlinks").
" If you installed the vim.txt help file set vimhelp.
" If would rather use a plain text help file set novimhelp.
set vimhelp
"set novimhelp

" Natural sort of (version) numbers within text.
set sortnumbers

" Maximum number of changes that can be undone.
set undolevels=100

" If you would like to run an executable file when you press
" 'Enter', 'l' or Right Arrow, set this.
set norunexec

" Don't do too many requests to slow file systems.
if !has('win')
	set slowfs=curlftpfs
endif

" What should be saved automatically between vifm sessions.  Drop "savedirs"
" value if you don't want vifm to remember last visited directories for you.
set vifminfo=dhistory,chistory,state,tui,shistory,
    \phistory,fhistory,dirstack,registers,bookmarks,bmarks

" Display suggestions in normal, visual and view modes for keys, marks and
"  registers (at most 5 files). In other view, when available.
set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

" Show list of matches on tab completion in command-line mode.
set wildmenu

" Display completions in a form of popup with descriptions of the matches.
set wildstyle=popup

" Ignore case in search patterns.
set ignorecase
set smartcase

" Don't highlight but use increment searching.
set incsearch
set nohlsearch

" Try to leave some space from cursor to upper/lower border in lists.
set scrolloff=4

" Set custom status line look.
"				rights | user:group | size | date | file name | space left
"set statusline="%1* %-10t  %N %4* %10d %2* owner:%u:%-7g %5* size:%s  %3* attr:%A"
"set statusline="%10A | %10u:%-7g  | %10E | %15d | %-35f     | Space left: %-5a "
set statusline=" %t%= %A %10u:%-7g %15s %20d  "

" Format for displaying time in file list. For example:
set timefmt=%d/%m/%y\ %H:%M

" Customize view columns a bit (enable ellipsis for truncated file names):
set viewcolumns=-{name}..,6{size},16{mtime}.

" Filter-out build and temporary files
"filter! /^.*\.(lo|o|d|class|py[co])$|.*~$/

" }}}

" {{{ Marks.

" :mark mark /full/directory/path [filename]
mark d ~/Descargas
mark D ~/Downloads
mark h ~/

" }}}

" {{{ Commands.

" :com[mand][!] command_name action
" The following macros can be used in a command.
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window.

command! df df -h %m 2> /dev/null
command! diff vim -d %f %F
command! zip zip -r %c.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! reload :write | restart full

command! FZFfind : set noquickview
				\| let $FZF_PICK = system('find | fzf 2>/dev/tty')
				\| if $FZF_PICK != ''
				\|     execute 'goto' fnameescape($FZF_PICK)
				\| endif
				\| redraw

" }}}

" {{{ Mappings.

" Start shell in current directory.
nnoremap s :shell<cr>

" Display sorting dialog.
nnoremap S :sort<cr>

" Toggle visibility of preview window.
nnoremap w :view<cr>
vnoremap w :view<cr>gv

" Open file in new Visual Code tab.
nnoremap o :!code %f<cr>
" Open file in new Visual Code window.
nnoremap O :!code --new-window %f<cr>

" Open file in the background using its default program.
nnoremap gb :!open -g %f<cr>

" Mappings for faster renaming.
nnoremap A cw
nnoremap I cw<c-a>
nnoremap cc cw<c-u>

" Toggle wrap setting on ',w' key.
nnoremap ,w :set wrap!<cr>

" Open editor to edit 'vifmrc' and apply settings after returning to Vifm.
nnoremap ,c :write | edit $MYVIFMRC | restart full<cr>

" Example of standard two-panel file managers mappings.
nnoremap <f3> :!less %f<cr>
nnoremap <f4> :edit<cr>
nnoremap <f5> :copy<cr>
nnoremap <f6> :move<cr>
nnoremap <f7> :mkdir<space>
nnoremap <f8> :delete<cr>

" MC-like: Open current directory in the other pane.
nnoremap <a-i> :sync<cr>
" MC-like: Open directory under cursor in the other pane.
nnoremap <a-o> :sync %c<cr>
" MC-like: Swap panes.
"nnoremap <c-u> <c-w>x

" Toggle showing hidden files.
nnoremap . za

" Fuzzy search files.
nnoremap / :FZFfind <cr>

" Interaction with system clipboard.
if has('win')
	" Yank current directory path to Windows clipboard with forward slashes.
	nnoremap yp :!echo %"d:gs!\!/! %i | clip<cr>
	" Yank path to current file to Windows clipboard with forward slashes.
	nnoremap yf :!echo %"c:gs!\!/! %i | clip<cr>
elseif has('mac')
	" Yank current directory path into the clipboard.
	nnoremap yd :!printf %d | pbcopy<cr>
	" Yank current file path into the clipboard.
	nnoremap yf :!printf %c:p | pbcopy<cr>
elseif executable('wl-copy')
	" Yank current directory path into primary and selection clipboards.
	nnoremap yd :!echo -n %d | wl-copy %i<cr>
	" Yank current file path into into primary and selection clipboards.
	nnoremap yf :!echo -n %c:p | wl-copy %i<cr>
	" yank current filename without path into primary and selection clipboards.
	nnoremap yn :!echo -n %c | wl-copy %i<cr>
	" yank root of current file's name into primary and selection clipboards.
	nnoremap yr :!echo -n %c:r | wl-copy %i<cr>
elseif executable('xclip')
	" Yank current directory path into the clipboard.
	nnoremap yd :!echo %d | xclip %i<cr>
	" Yank current file path into the clipboard.
	nnoremap yf :!echo %c:p | xclip %i<cr>
	" yank current filename without path into the clipboard.
	nnoremap yn :!echo -n %c | xclip %i<cr>
	" yank root of current file's name into the clipboard.
	nnoremap yr :!echo -n %c:r | xclip %i<cr>
elseif executable('xsel')
	" Yank current directory path into primary and selection clipboards.
	nnoremap yd :!echo -n %d | xsel --input --primary %i &&
				\ echo -n %d | xsel --clipboard --input %i<cr>
	" Yank current file path into into primary and selection clipboards.
	nnoremap yf :!echo -n %c:p | xsel --input --primary %i &&
				\ echo -n %c:p | xsel --clipboard --input %i<cr>
	" yank current filename without path into primary and selection clipboards.
	nnoremap yn :!echo -n %c | xsel --input --primary %i &&
				\ echo -n %c | xsel --clipboard --input %i<cr>
	" yank root of current file's name into primary and selection clipboards.
	nnoremap yr :!echo -n %c:r | xsel --input --primary %i &&
				\ echo -n %c:r | xsel --clipboard --input %i<cr>
endif

" }}}

" {{{ File Types.

" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer

" Image
filetype	{*.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm},<image/*>
			\ {Open in Irfanview}
			\ i_view64.exe %f &,
fileviewer	{*.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm},<image/*>
			\ identify %f

" Pdf
filetype	{*.pdf},<application/pdf>
			\ {Open in Acrobat}
			\ acrobat.sh &,
fileviewer	{*.pdf},<application/pdf>
			\ pdftotext -nopgbrk %c -

" PostScript
"filetype	{*.ps,*.eps,*.ps.gz},<application/postscript>

" Audio
filetype	{*.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus},
			\<audio/*>
			\ {Open in VLC}
			\ vlc.sh &,
fileviewer	*.mp3 mp3info

" Video
filetype	{*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
			\*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
			\*.as[fx]},
			\<video/*>
			\ {Open in VLC}
			\ vlc.sh &,
fileviewer	{*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
			\*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
			\*.as[fx]},
			\<video/*>
			\ ffprobe.sh &,

" Torrent
filetype	{*.torrent},<application/x-bittorrent>
			\ {Open in qBittorent}
			\ qbittorrent.sh &,

" Web
filetype	{*.html,*.htm},<text/html>
			\ {Open in vim}
			\ vim,
fileviewer	{*.html,*.htm},<text/html>
			\ lynx, links, w3m -dump -T text/html

" Object
filetype	{*.o},<application/x-object>
			\ nm %f | less

" Man page
filetype	{*.[1-8]},<text/troff> man ./%c
fileviewer	{*.[1-8]},<text/troff> man ./%c | col -b

" MD5
filetype	*.md5
			\ {Check MD5 hash sum}
			\ md5sum -c %f %S,

" SHA1
filetype	*.sha1
			\ {Check SHA1 hash sum}
			\ sha1sum -c %f %S,

" SHA256
filetype	*.sha256
			\ {Check SHA256 hash sum}
			\ sha256sum -c %f %S,

" SHA512
filetype	*.sha512
			\ {Check SHA512 hash sum}
			\ sha512sum -c %f %S,

" Mount .dmg archives
filetype	*.dmg open

" Mount .img disks
filetype	*.img open

" Open .pkg binaries
filetype	*.pkg open

" Extract .bz2 archives
filetype	*.bz2 bzip2 -d %f

" Extract .gz files
filetype	*.gz gunzip %f

" Extract zip files
filetype	{*.zip},<application/zip,application/java-archive>
			\ unzip %f
fileviewer	{*.zip,*.jar,*.war,*.ear},
			\<application/zip,application/java-archive>
			\ zip -sf %c

" Extract tar archives
filetype	{*.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz,*.tar.zst,*.tzst},
			\<application/x-tar>
			\ tar -xf %f
fileviewer	{*.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz,*.tar.zst,*.tzst},
			\<application/x-tar>
			\ tar -tf %f

" Office files
filetype {*.docx,*.doc,*.odt},
			\<application/vnd.openxmlformats-officedocument.wordprocessingml*,
			\application/vnd.ms-word*,
			\application/msword>
			\ msword.sh &,
filetype {*.xlsx,*.xls,*.ods},
			\<application/vnd.openxmlformats-officedocument.spreadsheetml*,
			\application/vnd.ms-excel*,
			\application/msexcel>
			\ msexcel.sh &,
filetype {*.pptx,*.ppt,*.odp},
			\<application/vnd.openxmlformats-officedocument.presentationml*,
			\application/vnd.ms-powerpoint*,
			\application/mspowerpoint>
			\ msppoint.sh &,

" }}}

" {{{ Script files.

" New icon set for vifm.
source ~/.config/vifm/scripts/vifm_devicons/favicons.vifm

" }}}
